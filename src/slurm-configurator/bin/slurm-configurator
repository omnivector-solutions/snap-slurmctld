#!/usr/bin/env python3
import argparse
import os
import sys

from jinja2 import Environment, FileSystemLoader


def get_parsed_args(argv):
    """Create argument parser and return cli args.
    """
    parser = argparse.ArgumentParser(
        description="Create SLURM Config"
    )

    parser.add_argument(
        "--slurm-configs",
        type=str,
        dest="slurm_configs",
        required=False,
        help="Slurm configs in key=val,key=val."
    )

    parser.add_argument(
        "--slurm-config-file",
        type=argparse.FileType('r'),
        dest="slurm_config_file",
        required=False,
        help="Slurm config to add to or override snap generated configs."
    )
    return parser.parse_args(argv)


def render_slurm_conf(ctxt: 'dict'=None):

    if not ctxt:
        ctxt = {}

    templates_path = os.path.join(os.getenv('SNAP'), 'templates')
    env = Environment(loader=FileSystemLoader(templates_path))
    return env.get_template('slurm.conf').render(ctxt=ctxt)


def main(argv=sys.argv[1:]):
    ctxt = {}
    args = get_parsed_args(argv)

    if args.slurm_configs:
        for config in args.slurm_configs.split(","):
            split_config = config.split("=")
            ctxt[split_config[0]] = split_config[1]

    if args.slurm_config_file:
        for line in args.slurm_config_file.readlines():
            split_line = line.split("=")
            ctxt[split_line[0]] = split_line[1]

    print(render_slurm_conf(ctxt=ctxt))


if __name__ == "__main__":
    main()
